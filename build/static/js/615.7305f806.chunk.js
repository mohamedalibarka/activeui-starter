(self.webpackChunk_activeviam_activeui=self.webpackChunk_activeviam_activeui||[]).push([[615],{41615:(e,a,t)=>{"use strict";t.r(a),t.d(a,{default:()=>I});var l=t(99046),o=t(21127),s=t.n(o),n=t(88517),u=t(58527),p=t.n(u),r=t(6335),i=t.n(r),c=t(69938),d=t.n(c),h=t(16765),m=t.n(h),b=t(59756),g=t.n(b),v=t(13224);function y({cube:e,data:a,metaData:t,widgetState:{mapping:l}}){if(!e||!a||!t)return[];const o={},s=l.horizontalSubplots.length+l.verticalSubplots.length>0,u=l.groupBy.length>0,p=l.splitBy.length>0;(0,v.IG)(a,t.hierarchyIndicesInCellSet,(({cell:e,cellIndex:a,columnIndex:r,tuple:i,rowIndex:c})=>{if(i){const d=(0,n._F)(i,{levelIndices:t.levelIndicesPerField,mapping:l,attributesRedirection:t.attributesRedirection}),h=[...d.horizontalSubplots,...d.verticalSubplots],b=[...d.groupBy,...d.splitBy],g=(0,n.Lj)(h),v=1,y=(0,n.Ym)(h,v),B=(0,n.KT)(h),I=(0,n.KT)(b),S=(0,n.KT)(d.groupBy)||"all",f=null==e?void 0:e.value,x=f?Math.abs(Number(f)):0,k=(({hasSubplots:e,hasGroupByMapping:a,hasSplitByMapping:t,subplotContainerCaption:l,groupName:o})=>!e||a&&t?a&&t?o:"":l)({hasSubplots:s,hasGroupByMapping:u,hasSplitByMapping:p,subplotContainerCaption:B,groupName:S}),M=((e,a)=>(o[e]||(o[e]=((e,a)=>({_key:e,hoverinfo:"none",textinfo:"text",branchvalues:"total",groupByToValues:{},name:a,cellsIndices:[],domain:{},type:"treemap",labels:[],values:[],parents:[],text:[],colorLabels:[],opacity:1}))(e,a)),o[e]))(g,y);s&&0===M.labels.length&&(M.labels.push(B),M.values.push(void 0),M.parents.push(""),M.cellsIndices.push(null),M.colorLabels.push(null),M.text.push("")),M.text.push((0,n.KT)(p?d.splitBy:d.groupBy)),null!==a&&M.cellsIndices.push([{columnIndex:r,rowIndex:c,cellIndex:a}]),M.labels.push(I),M.values.push(x),f&&void 0!==k&&M.parents.push(k),u&&p&&(M.groupByToValues[S]=(M.groupByToValues[S]||0)+x),M.colorLabels.push(S),s||u&&p||m()(M,["marker","pad"],{t:0,l:0,b:0,r:0})}}));const r=Object.values(o),i={mapping:{},numberOfUsedAutomaticColors:0};if(r.forEach((e=>{var a;m()(e,["marker","color"],null===(a=e.colorLabels)||void 0===a?void 0:a.map((e=>e?(0,n.he)({accumulator:i,colorway:t.colorway,traceName:e}):null)))})),r.forEach((e=>{const a=[];g()(e.groupByToValues,((t,l)=>{e.labels.push(l),e.values.push(t);const o=s?e.labels[0]:"";e.parents.push(o),e.cellsIndices.push(null),e.text.push(l),a.push(l)}));const t=a.map((e=>i.mapping[e]||""));e.marker&&(e.marker.color=[...e.marker.color,...t]),Reflect.deleteProperty(e,"groupByToValues")})),s){const e=t.subplots,a=(0,n.$)({traces:r,subplotsMetaData:e});return(0,n.Xc)(a,e),a}return r}i().register(d());const B=(e,a)=>a.on("plotly_treemapclick",(()=>!1)),I=(0,n.dC)((0,n.i)((0,n.H9)((0,o.memo)((e=>{const{cube:a,data:t,metaData:u,widgetState:r,onLoaded:i}=e,c=(0,o.useMemo)((()=>(0,l.TS)(null==r?void 0:r.mapping)),[null==r?void 0:r.mapping]);(0,n.ge)({isEmpty:c,onLoaded:i});const d=(0,o.useMemo)((()=>y({cube:a,data:t,metaData:u,widgetState:r})),[a,t,u,r]),h=(0,o.useMemo)((()=>(e=>e?(0,n.S5)(e.subplots):{})(u)),[u]);return a&&t&&u&&!c?s().createElement(n.XN,p()({},e,{traces:d,layout:h,cube:a,data:t,metaData:u,onInitialized:B})):s().createElement(n.MQ,null)})))))}}]);